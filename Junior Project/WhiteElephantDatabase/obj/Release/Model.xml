<?xml version="1.0" encoding="utf-8"?>
<DataSchemaModel FileFormatVersion="1.2" SchemaVersion="2.9" DspName="Microsoft.Data.Tools.Schema.Sql.Sql130DatabaseSchemaProvider" CollationLcid="1033" CollationCaseSensitive="False" xmlns="http://schemas.microsoft.com/sqlserver/dac/Serialization/2012/02">
	<Header>
		<CustomData Category="AnsiNulls">
			<Metadata Name="AnsiNulls" Value="True" />
		</CustomData>
		<CustomData Category="QuotedIdentifier">
			<Metadata Name="QuotedIdentifier" Value="True" />
		</CustomData>
		<CustomData Category="CompatibilityMode">
			<Metadata Name="CompatibilityMode" Value="130" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="WhiteElephantDatabase.dll" />
			<Metadata Name="FileName" Value="C:\USERS\PAT\DOCUMENTS\SCHOOL\CST316\PROJECTMAIN\WHITE-ELEPHANT\WHITEELEPHANTDATABASE\OBJ\RELEASE\WHITEELEPHANTDATABASE.DLL" />
			<Metadata Name="AssemblyName" Value="WhiteElephantDatabase" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="" />
			<Metadata Name="GenerateSqlClrDdl" Value="True" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="True" />
			<Metadata Name="AssemblySymbolsName" Value="C:\Users\Pat\Documents\School\CST316\ProjectMain\white-elephant\WhiteElephantDatabase\obj\Release\WhiteElephantDatabase.pdb" />
		</CustomData>
		<CustomData Category="SqlCmdVariables" Type="SqlCmdVariable" />
	</Header>
	<Model>
		<Element Type="SqlDatabaseOptions">
			<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
			<Property Name="IsAnsiNullDefaultOn" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Property Name="IsAnsiWarningsOn" Value="True" />
			<Property Name="IsArithAbortOn" Value="True" />
			<Property Name="IsConcatNullYieldsNullOn" Value="True" />
			<Property Name="IsTornPageProtectionOn" Value="False" />
			<Property Name="IsFullTextEnabled" Value="True" />
			<Property Name="CompatibilityMode" Value="130" />
			<Property Name="PageVerifyMode" Value="3" />
			<Property Name="DefaultLanguage" Value="" />
			<Property Name="DefaultFullTextLanguage" Value="" />
			<Property Name="QueryStoreStaleQueryThreshold" Value="367" />
			<Relationship Name="DefaultFilegroup">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[GroupEventTable].[GroupEventId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="3" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[UserGroupTable].[UserGroupId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="4" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[GroupTable].[GroupId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="5" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[EventNameTable].[EventNameId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[EventNameTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="6" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[EventTable].[EventId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="7" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[PasswordTable].[PasswordId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[PasswordTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="8" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[FriendlyName].[FriendlyNameId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[FriendlyName]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="9" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[UserTable].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="10" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[GiftTable].[GiftId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="11" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[UserEventTable].[UserEventId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="12" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[InvitedTable].[InvitedId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="13" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[StatusTable].[StatusId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="14" />
		</Element>
		<Element Type="SqlUniqueConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[EventNameTable].[EventName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[EventNameTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="15" />
		</Element>
		<Element Type="SqlUniqueConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[PasswordTable].[PasswordText]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[PasswordTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="16" />
		</Element>
		<Element Type="SqlUniqueConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[FriendlyName].[FriendlyName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[FriendlyName]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="17" />
		</Element>
		<Element Type="SqlUniqueConstraint">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[UserTable].[UserName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="18" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[__MigrationHistory]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[__MigrationHistory].[MigrationId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="150" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[__MigrationHistory].[ContextKey]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="300" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[__MigrationHistory].[Model]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varbinary]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[__MigrationHistory].[ProductVersion]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="32" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="19" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[AspNetRoles]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetRoles].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetRoles].[Name]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="20" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[AspNetRoles].[RoleNameIndex]">
			<Property Name="IsUnique" Value="True" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetRoles].[Name]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[AspNetRoles]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[AspNetUserClaims]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserClaims].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserClaims].[UserId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserClaims].[ClaimType]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserClaims].[ClaimValue]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="21" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="22" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[AspNetUserClaims].[IX_UserId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserClaims].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[AspNetUserClaims]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[AspNetUserLogins]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserLogins].[LoginProvider]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserLogins].[ProviderKey]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserLogins].[UserId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="23" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="24" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[AspNetUserLogins].[IX_UserId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserLogins].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[AspNetUserLogins]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[AspNetUserRoles]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserRoles].[UserId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUserRoles].[RoleId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="25" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="26" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="27" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[AspNetUserRoles].[IX_UserId]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserRoles].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[AspNetUsers]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[Id]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[Email]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[EmailConfirmed]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[PasswordHash]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[SecurityStamp]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[PhoneNumber]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[PhoneNumberConfirmed]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[TwoFactorEnabled]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[LockoutEndDateUtc]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[LockoutEnabled]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[bit]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[AccessFailedCount]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[AspNetUsers].[UserName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="28" />
		</Element>
		<Element Type="SqlIndex" Name="[dbo].[AspNetUsers].[UserNameIndex]">
			<Property Name="IsUnique" Value="True" />
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUsers].[UserName]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="IndexedObject">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[EventNameTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventNameTable].[EventNameId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="6" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventNameTable].[EventName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="15" />
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[EventTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventTable].[EventId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="7" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventTable].[Date]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="7" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime2]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventTable].[EventNameId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[EventTable].[MaxPrice]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="3" />
									<Property Name="Precision" Value="13" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[decimal]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="29" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId]">
			<Property Name="OnDeleteAction" Value="1" />
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[AspNetUserClaims].[UserId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserClaims]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="22" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId]">
			<Property Name="OnDeleteAction" Value="1" />
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[AspNetUserLogins].[UserId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserLogins]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="24" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId]">
			<Property Name="OnDeleteAction" Value="1" />
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles].[RoleId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetRoles].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetRoles]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="26" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId]">
			<Property Name="OnDeleteAction" Value="1" />
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles].[UserId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="27" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_Event_EventName]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[EventTable].[EventNameId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[EventNameTable].[EventNameId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[EventNameTable]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="29" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_GiftTable_ClaimUserEventTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[GiftTable].[ClaimUserEventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="30" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_GiftTable_SubmitUserEventTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[GiftTable].[SubmitUserEventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="31" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_GroupEvent_Event]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[GroupEventTable].[EventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="32" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_GroupEvent_GroupTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[GroupEventTable].[GroupId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="33" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserEventTable_EventTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="34" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserEventTable_StatusTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserEventTable].[StatusId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="35" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserEventTable_UserTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="36" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserGroupTable_GroupTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="37" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserGroupTable_InvitedTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[InvitedTable].[InvitedId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="38" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserGroupTable_StatusTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserGroupTable].[StatusId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="39" />
		</Element>
		<Element Type="SqlForeignKeyConstraint" Name="[dbo].[FK_UserGroupTable_UserTable]">
			<Relationship Name="Columns">
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignColumns">
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
			</Relationship>
			<Relationship Name="ForeignTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="40" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[FriendlyName]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[FriendlyName].[FriendlyNameId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="9" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[FriendlyName].[FriendlyName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="17" />
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[GiftTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[GiftId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="11" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[Title]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[Description]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[Price]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="2" />
									<Property Name="Precision" Value="13" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[decimal]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[URL]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[ClaimUserEventId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GiftTable].[SubmitUserEventId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="30" />
			<AttachedAnnotation Disambiguator="31" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[GroupEventTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GroupEventTable].[GroupEventId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="3" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GroupEventTable].[GroupId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GroupEventTable].[EventId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="33" />
			<AttachedAnnotation Disambiguator="32" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="41" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[GroupTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GroupTable].[GroupId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="5" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[GroupTable].[GroupName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="50" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[InvitedTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvitedTable].[InvitedId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="13" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[InvitedTable].[Email]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlUniqueConstraint" Name="[dbo].[OnlyUniqueEvents]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[GroupEventTable].[GroupId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[GroupEventTable].[EventId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="41" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[PasswordTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[PasswordTable].[PasswordId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="8" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[PasswordTable].[PasswordText]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="64" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="16" />
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.__MigrationHistory]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[__MigrationHistory].[MigrationId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[__MigrationHistory].[ContextKey]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[__MigrationHistory]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="19" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.AspNetRoles]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetRoles].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetRoles]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="20" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.AspNetUserClaims]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserClaims].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserClaims]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="21" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.AspNetUserLogins]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserLogins].[LoginProvider]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserLogins].[ProviderKey]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserLogins].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserLogins]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="23" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.AspNetUserRoles]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserRoles].[UserId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUserRoles].[RoleId]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUserRoles]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="25" />
		</Element>
		<Element Type="SqlPrimaryKeyConstraint" Name="[dbo].[PK_dbo.AspNetUsers]">
			<Relationship Name="ColumnSpecifications">
				<Entry>
					<Element Type="SqlIndexedColumnSpecification">
						<Relationship Name="Column">
							<Entry>
								<References Name="[dbo].[AspNetUsers].[Id]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="28" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[StatusTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[StatusTable].[StatusId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="14" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[StatusTable].[StatusName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlTable" Name="[dbo].[UserEventTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserEventTable].[UserEventId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="12" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserEventTable].[UserId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserEventTable].[EventId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserEventTable].[StatusId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="36" />
			<AttachedAnnotation Disambiguator="34" />
			<AttachedAnnotation Disambiguator="35" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[UserGroupTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserGroupTable].[UserGroupId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="4" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserGroupTable].[UserId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserGroupTable].[InvitedId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserGroupTable].[GroupId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserGroupTable].[StatusId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="40" />
			<AttachedAnnotation Disambiguator="38" />
			<AttachedAnnotation Disambiguator="37" />
			<AttachedAnnotation Disambiguator="39" />
			<Annotation Type="SqlInlineConstraintAnnotation" Disambiguator="42" />
		</Element>
		<Element Type="SqlCheckConstraint" Name="[dbo].[UserIdMustExist]">
			<Property Name="CheckExpressionScript">
				<Value><![CDATA[[UserId] IS NOT NULL OR [InvitedId] IS NOT NULL]]></Value>
			</Property>
			<Relationship Name="CheckExpressionDependencies">
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
			</Relationship>
			<Relationship Name="DefiningTable">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
			</Relationship>
			<AttachedAnnotation Disambiguator="42" />
		</Element>
		<Element Type="SqlTable" Name="[dbo].[UserTable]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="Columns">
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserTable].[UserId]">
						<Property Name="IsNullable" Value="False" />
						<Property Name="IsIdentity" Value="True" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="10" />
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserTable].[FriendlyNameId]">
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserTable].[PasswordId]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSimpleColumn" Name="[dbo].[UserTable].[UserName]">
						<Property Name="IsNullable" Value="False" />
						<Relationship Name="TypeSpecifier">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
						<AttachedAnnotation Disambiguator="18" />
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		11/19/2016
Author:		Rachel Soderberg
Project:	White Elephant
Summary:	This procedure will add an event name to the database.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	--DECLARE VARIABLES
	DECLARE @EventNameId INT
	DECLARE @EventId INT
	DECLARE @StatusId INT

	BEGIN TRY

		-- PROCESS NAME IF EXISTS
		IF @EventName IS NOT NULL
			BEGIN
				-- MAKE SURE STATUS NAME ADNIN EXISTS
				IF (SELECT COUNT(*) FROM StatusTable WHERE StatusName = 'Admin') = 0
					BEGIN	
						INSERT INTO StatusTable (StatusName)
						VALUES ('Admin');
						SELECT @StatusId = SCOPE_IDENTITY()
					END
				ELSE
					SELECT @StatusId = [StatusId] FROM StatusTable WHERE StatusName = 'Admin'

				-- CHECK IF VALUE ALREADY EXISTS
				SELECT @EventNameId = [EventNameId] FROM EventNameTable WHERE [EventName] = @EventName

				-- VALUE NOT FOUND, ADD IT
				IF @EventNameId IS NULL
					BEGIN
						INSERT INTO EventNameTable ([EventName]) VALUES (@EventName)
						SELECT @EventNameId = SCOPE_IDENTITY()
					END

				-- ADD NEW ITEM TO EVENT TABLE
				BEGIN
					INSERT INTO EventTable ([EventNameId], [Date], [MaxPrice])
					VALUES (@EventNameId, @EventDate, @MaxPrice)
					SELECT @EventId = SCOPE_IDENTITY()
				END

				-- ADD EVENT TO GROUP EVENT TABLE
				BEGIN
					INSERT INTO GroupEventTable ([EventId], [GroupId])
					VALUES (@EventId, @GroupId)
					INSERT INTO UserEventTable ([EventId], [UserId], [StatusId]) 
					VALUES (@EventId, @UserId, @StatusId)
				END
		END
	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
			BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
			  RETURN @EventId
			END
		ELSE
			RETURN 0
END
GRANT EXECUTE ON [dbo].[usp_AddEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent].[@EventName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable].[EventNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable].[EventName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[Date]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[MaxPrice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent].[@EventDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent].[@MaxPrice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent].[@GroupID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddEvent].[@EventName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddEvent].[@EventDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="7" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime2]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddEvent].[@MaxPrice]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="3" />
									<Property Name="Precision" Value="13" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[decimal]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddEvent].[@GroupID]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddEvent].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3850" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddEvent]&#xD;&#xA;&#x9;@EventName VARCHAR(128),&#xD;&#xA;&#x9;@EventDate DATETIME2(7),&#xD;&#xA;&#x9;@MaxPrice DECIMAL(13,3),&#xD;&#xA;&#x9;@GroupID INT,&#xD;&#xA;&#x9;@UserId VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddGiftToEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		3/07/2017
Author:		Patrick Carlson
Project:	White Elephant
Summary:	This procedure will add a gift to event.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	--DECLARE var type   Data I pull from the db
	DECLARE @GiftId INT
	DECLARE @UserEventID INT
	

	BEGIN TRY
		-- GET USEREVENTID
		SELECT @UserEventID = [UserEventId] FROM [UserEventTable] WHERE @UserID = [UserId] AND @EventID = [EventId]

		-- CHECK THAT USER DOES NOT HAVE GIFT INPUT ALREADY
		SELECT @GiftId = [GiftId] FROM [GiftTable] WHERE @UserEventID = [SubmitUserEventId]

		-- INPUT GIFT DATA IF USER HAS NOT ALREADY SUBMITTED GIFT
		IF (@GiftId IS NULL)
			BEGIN
				INSERT INTO GiftTable (Title, Description, Price, URL, SubmitUserEventId)
				VALUES (@GiftTitle, @GiftDescription, @GiftPrice, @GiftURL, @UserEventID)
				SELECT @GiftId = SCOPE_IDENTITY()
			END
		END TRY
		

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
			  RETURN @GiftId
       END
END
GRANT EXECUTE ON [dbo].[usp_AddGiftToEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@UserID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@EventID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[SubmitUserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Title]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Description]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Price]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[URL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@GiftTitle]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@GiftDescription]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@GiftPrice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent].[@GiftURL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddGiftToEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@UserID]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@EventID]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@GiftTitle]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@GiftDescription]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@GiftPrice]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="3" />
									<Property Name="Precision" Value="13" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[decimal]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddGiftToEvent].[@GiftURL]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="IsMax" Value="True" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3227" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddGiftToEvent]&#xD;&#xA;&#x9;@UserID VARCHAR(128),&#xD;&#xA;&#x9;@EventID INT,&#xD;&#xA;&#x9;@GiftTitle NVARCHAR(128),&#xD;&#xA;&#x9;@GiftDescription NVARCHAR(MAX),&#xD;&#xA;&#x9;@GiftPrice DECIMAL(13,3),&#xD;&#xA;&#x9;@GiftURL NVARCHAR(MAX)&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddNewGroup]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		11/19/2016
Author:		Patrick Carlson - Based on example by Matt Dougal
Project:	White Elephant
Summary:	This procedure will add a group and group name to the Database.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;


	--DECLARE VARIABLES
	DECLARE @GroupId INT
	DECLARE @StatusId INT
	DECLARE @UserGroupId INT

	BEGIN TRY

		--PROCESS GROUP NAME IF EXISTS
		IF @GroupName IS NOT NULL	
			BEGIN
				-- MAKE SURE STATUS NAME ADNIN EXISTS
				IF (SELECT COUNT(*) FROM StatusTable WHERE StatusName = 'Admin') = 0
					BEGIN	
						INSERT INTO StatusTable (StatusName)
						VALUES ('Admin');
						SELECT @StatusId = SCOPE_IDENTITY()
					END
				ELSE
					SELECT @StatusId = [StatusId] FROM StatusTable WHERE StatusName = 'Admin'

				-- GET GROUP AND USER ID
				SELECT @GroupId = [GroupId] FROM GroupTable Where GroupName = @GroupName

				-- CHECK IF VALUE ALREADY EXISTS
				SELECT @UserGroupId = [UserGroupId] FROM UserGroupTable AS ugt JOIN GroupTable AS gt ON  ugt.GroupId = gt.GroupId
					WHERE @UserId = ugt.UserId  AND  @GroupName = gt.GroupName

				IF @UserGroupId IS NULL
					BEGIN							
						INSERT INTO GroupTable ([GroupName]) VALUES (@GroupName)
						SELECT @GroupId = SCOPE_IDENTITY()
						INSERT INTO UserGroupTable ([GroupId], [UserId], [StatusId]) 
						VALUES (@GroupId, @UserId, @StatusId)
						SELECT @UserGroupId = SCOPE_IDENTITY()
					END
			END
			
	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
			BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
			  RETURN @UserGroupId
			END
		ELSE
			RETURN 0
END
GRANT EXECUTE ON [dbo].[usp_AddNewGroup] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewGroup].[@GroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserGroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewGroup].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewGroup]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddNewGroup].[@GroupName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddNewGroup].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3694" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddNewGroup]&#xD;&#xA;&#x9;@GroupName VARCHAR(128),&#xD;&#xA;&#x9;@UserId VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddNewUser]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		10/24/2016
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will add a user and password to the database.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	-- DECLARE VARIABLES
	DECLARE @FriendlyNameId INT
	DECLARE @PasswordId INT

	BEGIN TRY

		-- PROCESS FRIENDLY NAME IF EXISTS
		IF @FriendlyName IS NOT NULL
			BEGIN
				
				-- CHECK IF VALUE ALREADY EXISTS
				SELECT @FriendlyNameId = [FriendlyNameId] FROM FriendlyName WHERE [FriendlyName] = @FriendlyName

				-- VALUE WAS NOT FOUND SO ADD IT
				IF @FriendlyNameId IS NULL
					BEGIN
						INSERT INTO FriendlyName ([FriendlyName]) VALUES (@FriendlyName)
						SELECT @FriendlyNameId = SCOPE_IDENTITY()
					END
			END

		-- CHECK IF VALUE ALREADY EXISTS
		SELECT @PasswordId = [PasswordId] FROM PasswordTable WHERE [PasswordText] = @Password

		-- VALUE WAS NOT FOUND SO ADD IT
		IF @PasswordId IS NULL
			BEGIN
				INSERT INTO PasswordTable ([PasswordText]) VALUES (@Password)
				SELECT @PasswordId = SCOPE_IDENTITY()
			END

		-- ADD NEW ITEM TO USER TABLE
		INSERT INTO UserTable ([UserName], [PasswordId], [FriendlyNameId])
		VALUES (@UserName, @PasswordId, @FriendlyNameId)

	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_AddNewUser] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewUser].[@FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName].[FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable].[PasswordText]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewUser].[@Password]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewUser].[@UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddNewUser]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddNewUser].[@UserName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddNewUser].[@Password]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="64" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddNewUser].[@FriendlyName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3463" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddNewUser]&#xD;&#xA;&#x9;@UserName VARCHAR(128),&#xD;&#xA;&#x9;@Password VARCHAR(64),&#xD;&#xA;&#x9;@FriendlyName VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddUserToEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		2/11/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will add a user to an event.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	DECLARE @UserId NVARCHAR(128)
	DECLARE @StatusId INT

	BEGIN TRY
		-- MAKE SURE STATUS NAME EXISTS
		IF (SELECT COUNT(*) FROM StatusTable WHERE StatusName = @StatusName) = 0
		BEGIN	
			INSERT INTO StatusTable (StatusName)
			VALUES (@StatusName);
		END

		-- GET ID OF USER
		SELECT @UserId = [Id] FROM [AspNetUsers] WHERE Email = @UserEmail
		SELECT @StatusId = [StatusId] FROM StatusTable WHERE StatusName = @StatusName

		-- INPUT USER AND GROUP DATA TO USERGROUPTABLE IF DOES NOT ALREADY EXIST
		IF (@UserId IS NOT NULL AND (SELECT COUNT(*) FROM UserEventTable WHERE UserId = @UserId AND EventId = @EventId) = 0)
			BEGIN	
				INSERT INTO UserEventTable (UserId, EventId, StatusId)
				VALUES (@UserId, @EventId, @StatusId);
			END
		ELSE
			BEGIN
				IF(@UserId IS NOT NULL)
					BEGIN
						UPDATE UserEventTable
						SET StatusId = @StatusId
						WHERE UserId = @UserId AND EventId = @EventId
					END
			END
	END TRY

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_AddUserToEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToEvent].[@StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToEvent].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToEvent].[@EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToEvent].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToEvent].[@EventId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToEvent].[@StatusName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3372" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddUserToEvent]&#xD;&#xA;&#x9;@UserEmail NVARCHAR(256),&#xD;&#xA;&#x9;@EventId INT,&#xD;&#xA;&#x9;@StatusName VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_AddUserToGroup]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		11/23/2016
Author:		Patrick Carlson - Based on example by Matt Dougal
Project:	White Elephant
Summary:	This procedure will add a user to a group.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	DECLARE @UserId NVARCHAR(128)
	DECLARE @StatusId INT
	DECLARE @InvitedUserId INT
	DECLARE @bodyHTML  NVARCHAR(MAX)  

	BEGIN TRY
		-- MAKE SURE STATUS NAME EXISTS
		IF (SELECT COUNT(*) FROM StatusTable WHERE StatusName = @StatusName) = 0
		BEGIN	
			INSERT INTO StatusTable (StatusName)
			VALUES (@StatusName);
		END

		-- GET ID'S OF CORRESPONDING GROUP AND USER
		SELECT @UserId = [Id] FROM [AspNetUsers] WHERE Email = @UserEmail
		SELECT @InvitedUserId = InvitedId FROM InvitedTable WHERE Email = @UserEmail
		SELECT @StatusId = [StatusId] FROM StatusTable WHERE StatusName = @StatusName

		-- ENTER USER DATA INTO THE INVITED TABLE IF THEY ARE NOT ALREADY A USER
		IF (@UserId IS NULL AND @InvitedUserId IS NULL)
			BEGIN
				INSERT INTO InvitedTable (Email)
				VALUES (@UserEmail)
				SELECT @InvitedUserId =  SCOPE_IDENTITY()
			END

		-- INPUT USER AND GROUP DATA TO USERGROUPTABLE IF DOES NOT ALREADY EXIST
		IF (@UserId IS NOT NULL AND (SELECT COUNT(*) FROM UserGroupTable WHERE UserId = @UserId AND GroupId = @GroupId) = 0)
			BEGIN	
				INSERT INTO UserGroupTable (UserId, GroupId, StatusId)
				VALUES (@UserId, @GroupId, @StatusId);
			END
		ELSE IF (@InvitedUserId IS NOT NULL AND (SELECT COUNT(*) FROM UserGroupTable WHERE InvitedId = @InvitedUserId AND GroupId = @GroupId) = 0)
			BEGIN	
				INSERT INTO UserGroupTable (InvitedId, GroupId, StatusId)
				VALUES (@InvitedUserId, @GroupId, @StatusId);
			END
		ELSE
			BEGIN
				IF(@UserId IS NOT NULL)
					BEGIN
						UPDATE UserGroupTable
						SET StatusId = @StatusId
						WHERE UserId = @UserId AND GroupId = @GroupId
					END
			END

		---- Create HTML form for email
		--SET @bodyHTML =
		--	N'<H1>White Elephant Gift Exchange Group Invite</H1>' + N' <p>' +
		--	N' You have been invited to a White Elephant Gift Exchange group!' + N' <p>' +
		--	N' The Group you have been invited to is: ' +
		--	CAST (@bodyHTML AS nvarchar(MAX));


		---- SEND EMAIL TO INVITED
		--EXEC msdb.dbo.sp_send_dbmail
		--		@profile_name = 'WhiteElephantMail',  
		--		@recipients = 'oitjp2016@outlook.com',    --Replace with @UserEmail for production
		--		@body = @bodyHTML,  
		--		@subject = 'An invitation',
		--		@body_format = 'HTML'; 

	END TRY

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_AddUserToGroup] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToGroup].[@StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToGroup].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToGroup].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_AddUserToGroup]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToGroup].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToGroup].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_AddUserToGroup].[@StatusName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="4722" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_AddUserToGroup]&#xD;&#xA;&#x9;@UserEmail NVARCHAR(256),&#xD;&#xA;&#x9;@GroupId INT,&#xD;&#xA;&#x9;@StatusName VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		2/13/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will delete an event from DB
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	BEGIN TRY

		--PROCESS GROUP NAME IF EXISTS
		IF @EventId IS NOT NULL	
			BEGIN
			--SELECT @EventId = FROM Event

					-- DELETE USERGROUPTABLE VALUES ASSOCIATED WITH GROUPNAME
					DELETE FROM UserEventTable
					WHERE @EventId = EventId						

					-- DELETE GROUPTABLE WHERE GROUPNAME MATCHES
					DELETE FROM GroupEventTable
					WHERE @EventId = EventId

--TODO(Patrick): When group deleted, delete event. Need delete event SP
			END
	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteEvent].[@EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteEvent].[@EventId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2816" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteEvent]&#xD;&#xA;&#x9;@EventId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteGiftFromEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		3/14/2017
Author:		Patrick Carlson
Project:	White Elephant
Summary:	This procedure will delete a gift from an event.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN

	BEGIN TRANSACTION
	SET NOCOUNT ON;

	BEGIN TRY
		
		DELETE GiftTable
		WHERE GiftId = @GiftID
	
	END TRY


BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteGiftFromEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteGiftFromEvent].[@GiftID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteGiftFromEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteGiftFromEvent].[@GiftID]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2454" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteGiftFromEvent]&#xD;&#xA;&#x9;@GiftID INT&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteGroup]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		11/19/2016
Author:		Patrick Carlson - Based on example by Matt Dougal
Project:	White Elephant
Summary:	This procedure will delete a group from DB
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	-- DECLARE VARIABLES
	DECLARE @EventId INT
	BEGIN TRY

		--PROCESS GROUP NAME IF EXISTS
		IF @GroupId IS NOT NULL	
			BEGIN
			--SELECT @EventId = FROM Event

					-- DELETE USERGROUPTABLE VALUES ASSOCIATED WITH GROUPNAME
					DELETE UserGroupTable
					FROM UserGroupTable AS ugt JOIN GroupTable AS gt 
						ON  ugt.GroupId = gt.GroupId
					WHERE @GroupId = gt.GroupId						

					-- DELETE GROUPTABLE WHERE GROUPNAME MATCHES
					DELETE GroupTable
					WHERE [GroupId] = @GroupId

--TODO(Patrick): When group deleted, delete event. Need delete event SP
			END
	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteGroup] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteGroup].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteGroup]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteGroup].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2982" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteGroup]&#xD;&#xA;&#x9;@GroupId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteUser]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		10/24/2016
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will delete a user and password from the database.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	-- DECLARE VARIABLES
	DECLARE @FriendlyNameId INT
	DECLARE @PasswordId INT

	BEGIN TRY
		-- GET ID'S OF CURRENT USER TABLE VALUES
		SELECT @FriendlyNameId = [FriendlyNameId] FROM UserTable WHERE [UserName] = @UserName
		SELECT @PasswordId = [PasswordId] FROM UserTable WHERE [UserName] = @UserName

		-- DELETE USERTABLE DATA
		DELETE FROM UserTable
		WHERE [UserName] = @UserName

		-- IF THE FRIENDLY NAME IS NOT USED ANYWHERE ELSE DELETE IT
		IF @FriendlyNameId IS NOT NULL
			BEGIN
				IF (SELECT COUNT(*) FROM UserTable WHERE [FriendlyNameId] = @FriendlyNameId) = 0
					DELETE FROM FriendlyName WHERE [FriendlyNameId] = @FriendlyNameId
			END

		-- IF THE PASSWORD IS NOT USED ANYWHERE ELSE DELETE IT
		IF (SELECT COUNT(*) FROM UserTable WHERE [PasswordId] = @PasswordId) = 0
			DELETE FROM PasswordTable WHERE [PasswordId] = @PasswordId

	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteUser] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUser].[@UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUser]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteUser].[@UserName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3261" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteUser]&#xD;&#xA;&#x9;@UserName VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteUserFromEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		2/13/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will remove a user from an event
Execution Rights granted to -- Public

Modified Date:		1/22/2017
By:					Matt Dougal
Summary:			Modified to take email instead of user name


***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	DECLARE @UserId NVARCHAR(128)
	DECLARE @InvitedId INT
	DECLARE @UserEventId INT

	BEGIN TRY
		-- GET ID'S OF CORRESPONDING GROUP, USER, AND USERGROUP
		SELECT @UserId = Id FROM AspNetUsers WHERE Email = @UserEmail
		SELECT @UserEventId = [UserEventId] FROM UserEventTable WHERE UserId = @UserId AND EventId = @EventId

		-- REMOVE USER FROM GROUP IF USER IS MEMBER OF GROUP
		IF @UserEventId IS NOT NULL
		BEGIN
			DELETE FROM UserEventTable
			WHERE @UserEventId = UserEventId
		END

		-- CHECK IF ALL USERS HAVE BEEN REMOVED FROM GROUP IF SO DELETE GROUP
		IF ((SELECT COUNT(*) FROM UserEventTable WHERE EventId = @EventId) = 0)
		BEGIN
			EXEC usp_DeleteEvent @EventId
		END
	END TRY

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteUserFromEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromEvent].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromEvent].[@EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteEvent]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteUserFromEvent].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteUserFromEvent].[@EventId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3215" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteUserFromEvent]&#xD;&#xA;&#x9;@UserEmail VARCHAR(128),&#xD;&#xA;&#x9;@EventId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_DeleteUserFromGroup]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		11/23/2016
Author:		Patrick Carlson - Based on example by Matt Dougal
Project:	White Elephant
Summary:	This procedure will remove a user from a group
Execution Rights granted to -- Public

Modified Date:		1/22/2017
By:					Matt Dougal
Summary:			Modified to take email instead of user name


***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	DECLARE @UserId NVARCHAR(128)
	DECLARE @InvitedId INT
	DECLARE @UserGroupId INT

	BEGIN TRY
		-- GET ID'S OF CORRESPONDING GROUP, USER, AND USERGROUP
		SELECT @UserId = Id FROM AspNetUsers WHERE Email = @UserEmail

		IF (@UserId IS NULL)
			BEGIN
				SELECT @InvitedId = InvitedId FROM InvitedTable WHERE Email = @UserEmail
				SELECT @UserGroupId = [UserGroupId] FROM UserGroupTable WHERE InvitedId = @InvitedId AND GroupId = @GroupId
			END
		ELSE
			BEGIN
				SELECT @UserGroupId = [UserGroupId] FROM UserGroupTable WHERE UserId = @UserId AND GroupId = @GroupId
			END

		-- REMOVE USER FROM GROUP IF USER IS MEMBER OF GROUP
		IF @UserGroupId IS NOT NULL
		BEGIN
			DELETE FROM UserGroupTable
			WHERE @UserGroupId = UserGroupId
		END

		-- REMOVE USER FROM ALL CONNECTED EVENTS
		IF (@UserId IS NOT NULL)
			BEGIN
				DELETE FROM UserEventTable WHERE UserId = @UserId
			END

		-- IF THE USER WAS ONLY INVITED TO THAT GROUP DELETE THEM FROM THE INVITED TABLE
		IF(@InvitedId IS NOT NULL AND (SELECT COUNT(*) FROM UserGroupTable WHERE InvitedId = @InvitedId) = 0)
			BEGIN
				DELETE FROM InvitedTable WHERE InvitedId = @InvitedId
			END

		-- CHECK IF ALL USERS HAVE BEEN REMOVED FROM GROUP IF SO DELETE GROUP
		IF (SELECT COUNT(*) FROM UserGroupTable WHERE GroupId = @GroupId) = 0
		BEGIN
			EXEC usp_DeleteGroup @GroupId
		END
	END TRY

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_DeleteUserFromGroup] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromGroup].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserGroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromGroup].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteGroup]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_DeleteUserFromGroup]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteUserFromGroup].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_DeleteUserFromGroup].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="3929" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_DeleteUserFromGroup]&#xD;&#xA;&#x9;@UserEmail VARCHAR(128),&#xD;&#xA;&#x9;@GroupId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetEvent]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		2/11/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will get the event for a user.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		et.EventId
	FROM		EventTable et
	INNER JOIN	GroupEventTable get1 on get1.EventId = et.EventId
	INNER JOIN	UserEventTable uet on uet.EventId = et.EventId
	WHERE		et.MaxPrice = @MaxPrice AND 
				get1.GroupId = @GroupId AND 
				uet.UserId = @UserId AND
				et.Date = @EventDate
END
GRANT EXECUTE ON [dbo].[usp_GetEvent] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[MaxPrice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvent].[@MaxPrice]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvent].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvent].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[Date]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvent].[@EventDate]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvent]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvent].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvent].[@EventName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvent].[@MaxPrice]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="3" />
									<Property Name="Precision" Value="13" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[decimal]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvent].[@EventDate]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Scale" Value="7" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[datetime2]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvent].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1029" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetEvent]&#xD;&#xA;&#x9;@GroupId INT,&#xD;&#xA;&#x9;@EventName VARCHAR(128),&#xD;&#xA;&#x9;@MaxPrice DECIMAL(13, 3),&#xD;&#xA;&#x9;@EventDate DATETIME2,&#xD;&#xA;&#x9;@UserId VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetEventGifts]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		3/07/2017
Author:		Patrick Carlson
Project:	White Elephant
Summary:	This procedure will return all gifts for the event, excluding
the user running the query.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT  GT.GiftId,
			GT.Title,
			GT.Description,
			GT.Price,
			GT.URL,
			GT.ClaimUserEventId,
			GT.SubmitUserEventId
			FROM UserEventTable AS UET
			JOIN GiftTable AS GT ON UET.UserEventId = GT.SubmitUserEventId
			WHERE UET.EventId = @EventID 
END
GRANT EXECUTE ON [dbo].[usp_GetEventGifts] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[SubmitUserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Title]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Description]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[Price]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[URL]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[ClaimUserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEventGifts].[@EventID]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEventGifts]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEventGifts].[@EventID]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="954" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetEventGifts]&#xD;&#xA;&#x9;@EventID INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetEvents]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		2/11/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will get all events for a user/group.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		et.EventId,
				ent.EventName
	FROM		EventTable et
	INNER JOIN	GroupEventTable get1 on get1.EventId = et.EventId
	INNER JOIN	UserEventTable uet on uet.EventId = et.EventId
	INNER JOIN	EventNameTable ent on ent.EventNameId = et.EventNameId
	WHERE		get1.GroupId = @GroupId AND 
				uet.UserId = @UserId
END
GRANT EXECUTE ON [dbo].[usp_GetEvents] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable].[EventNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventNameTable].[EventName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupEventTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvents].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvents].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEvents]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvents].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEvents].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="984" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetEvents]&#xD;&#xA;&#x9;@GroupId INT,&#xD;&#xA;&#x9;@UserId VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetEventUsers]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		2/11/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will get the user data from an event.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		uet.UserEventId AS 'UserEventId',
				uet.EventId AS 'EventId',
				anu.UserName AS 'UserName',
				anu.Email AS 'Email',
				st.StatusName AS 'Status'
	FROM		UserEventTable uet
	INNER JOIN	EventTable et ON uet.EventId = et.EventId
	INNER JOIN	StatusTable st ON uet.StatusId = st.StatusId
	INNER JOIN	AspNetUsers anu ON uet.UserId = anu.Id
	WHERE		et.EventId = @EventId
END
GRANT EXECUTE ON [dbo].[usp_GetEventUsers] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEventUsers].[@EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetEventUsers]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetEventUsers].[@EventId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1042" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetEventUsers]&#xD;&#xA;&#x9;@EventId INT&#xD;&#xA;&#x9;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetGroups]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		2/11/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will get the event for a user.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		gt.GroupId,
				gt.GroupName
	FROM		GroupTable gt
	INNER JOIN	UserGroupTable ugt on ugt.GroupId = gt.GroupId
	WHERE		ugt.UserId = @UserId
END
GRANT EXECUTE ON [dbo].[usp_GetGroups] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetGroups].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetGroups]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetGroups].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="795" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetGroups]&#xD;&#xA;&#x9;@UserId VARCHAR(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_GetGroupUsers]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		1/21/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will get the user data from a group.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		anu.UserName AS 'UserName',
				anu.Email AS 'Email',
				it.Email AS 'InvitedEmail',
				st.StatusName AS 'Status'
	FROM		UserGroupTable ugt
	INNER JOIN	GroupTable gt ON ugt.GroupId = gt.GroupId
	INNER JOIN	StatusTable st ON ugt.StatusId = st.StatusId
	LEFT JOIN	AspNetUsers anu ON ugt.UserId = anu.Id
	LEFT JOIN	InvitedTable it ON ugt.InvitedId = it.InvitedId
	WHERE		gt.GroupId = @GroupId
END
GRANT EXECUTE ON [dbo].[usp_GetGroupUsers] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetGroupUsers].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_GetGroupUsers]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_GetGroupUsers].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="1060" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_GetGroupUsers]&#xD;&#xA;&#x9;@GroupId INT&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_IsEventAdmin]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		2/13/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will return the status of an event member.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		st.StatusName AS 'Status'
	FROM		UserEventTable uet
	INNER JOIN	EventTable et ON uet.EventId = et.EventId
	INNER JOIN	StatusTable st ON uet.StatusId = st.StatusId
	INNER JOIN	AspNetUsers anu ON uet.UserId = anu.Id
	WHERE		et.EventId = @EventId AND anu.Email = @UserEmail
END
GRANT EXECUTE ON [dbo].[usp_IsEventAdmin] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[EventTable].[EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsEventAdmin].[@EventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsEventAdmin].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsEventAdmin]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_IsEventAdmin].[@EventId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_IsEventAdmin].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="967" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_IsEventAdmin]&#xD;&#xA;&#x9;@EventId INT,&#xD;&#xA;&#x9;@UserEmail NVARCHAR(256)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_IsGroupAdmin]">
			<Property Name="BodyScript">
				<Value><![CDATA[
	/**************************************************************************
***************************************************************************
Date:		1/21/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will return the status of a group member.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/
IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	SELECT		st.StatusName AS 'Status'
	FROM		UserGroupTable ugt
	INNER JOIN	GroupTable gt ON ugt.GroupId = gt.GroupId
	INNER JOIN	StatusTable st ON ugt.StatusId = st.StatusId
	INNER JOIN	AspNetUsers anu ON ugt.UserId = anu.Id
	WHERE		gt.GroupId = @GroupId AND anu.Email = @UserEmail
END
GRANT EXECUTE ON [dbo].[usp_IsGroupAdmin] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Id]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[StatusTable].[StatusName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GroupTable].[GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsGroupAdmin].[@GroupId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[AspNetUsers].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsGroupAdmin].[@UserEmail]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_IsGroupAdmin]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_IsGroupAdmin].[@GroupId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_IsGroupAdmin].[@UserEmail]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="966" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_IsGroupAdmin]&#xD;&#xA;&#x9;@GroupId INT,&#xD;&#xA;&#x9;@UserEmail NVARCHAR(256)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_SetGiftClaimStatus]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		3/07/2017
Author:		Patrick Carlson
Project:	White Elephant
Summary:	This procedure will add a gift to event.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	--DECLARE LOCAL VARIABLES 
	--DECLARE @GiftId INT
	DECLARE @ClaimEventUserId INT
	DECLARE @UserEventId INT

	SELECT @ClaimEventUserId = gt.ClaimUserEventId FROM GiftTable AS gt 
	WHERE gt.GiftId = @GiftId

	SELECT @UserEventId = uet.UserEventId FROM UserEventTable AS uet
	WHERE @UserId = uet.UserId

	BEGIN TRY
		IF (@ClaimEventUserId IS NOT NULL)
			BEGIN
				UPDATE GiftTable
				SET ClaimUserEventId = NULL
				WHERE GiftId = @GiftId
			END
		ELSE 
			BEGIN
				UPDATE GiftTable
				SET ClaimUserEventId = @UserEventId
				WHERE GiftId = @GiftId
			END


	END TRY

	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_SetGiftClaimStatus] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[ClaimUserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetGiftClaimStatus].[@GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetGiftClaimStatus].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserEventTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[ClaimUserEventId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GiftTable].[GiftId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_SetGiftClaimStatus]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetGiftClaimStatus].[@GiftId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_SetGiftClaimStatus].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2986" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_SetGiftClaimStatus]&#xD;&#xA;@GiftId INT,&#xD;&#xA;@UserId VARCHAR(128)&#xD;&#xA;&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_UpdateInvited]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		1/28/2017
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will look for users in the Invited table and remove
			them as well as update the UserGroupTable.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	-- DECLARE VARIABLES
	DECLARE @InvitedId INT

	BEGIN TRY

		SELECT @InvitedId = [InvitedId] FROM InvitedTable WHERE @Email = [Email]
		IF @InvitedId IS NOT NULL
			BEGIN
				UPDATE UserGroupTable
				SET UserId = @UserId, InvitedId = NULL
				WHERE InvitedId = @InvitedId

				DELETE FROM InvitedTable
				WHERE InvitedId = @InvitedId
			END

	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_UpdateInvited] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateInvited].[@Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[InvitedTable].[Email]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateInvited].[@UserId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserGroupTable].[InvitedId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateInvited]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_UpdateInvited].[@Email]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="256" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_UpdateInvited].[@UserId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[nvarchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="2827" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_UpdateInvited]&#xD;&#xA;&#x9;@Email nvarchar(256),&#xD;&#xA;&#x9;@UserId nvarchar(128)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[usp_UpdateUser]">
			<Property Name="BodyScript">
				<Value><![CDATA[
/**************************************************************************
***************************************************************************
Date:		10/24/2016
Author:		Matt Dougal
Project:	White Elephant
Summary:	This procedure will update a user in the database.
Execution Rights granted to -- Public

***************************************************************************
**************************************************************************/

IF 1=0 BEGIN
SET FMTONLY OFF
END
BEGIN
	BEGIN TRANSACTION
	SET NOCOUNT ON;

	-- DECLARE VARIABLES
	DECLARE @OldFriendlyNameId INT
	DECLARE @OldPasswordId INT
	DECLARE @NewFriendlyNameId INT
	DECLARE @NewPasswordId INT

	BEGIN TRY
		
		-- GET ID'S OF CURRENT USER TABLE VALUES
		SELECT @OldFriendlyNameId = [FriendlyNameId] FROM UserTable WHERE [UserName] = @UserName
		SELECT @OldPasswordId = [PasswordId] FROM UserTable WHERE [UserName] = @UserName

		-- UPDATE FRIENDLY NAME
		IF @NewFriendlyName IS NOT NULL
			BEGIN
				SELECT @NewFriendlyNameId = [FriendlyNameId] FROM FriendlyName WHERE [FriendlyName] = @NewFriendlyName

				-- VALUE DOES NOT EXIST YET
				IF @NewFriendlyNameId IS NULL
					BEGIN
						INSERT INTO FriendlyName ([FriendlyName]) VALUES (@NewFriendlyName)
						SELECT @NewFriendlyNameId = SCOPE_IDENTITY()
					END
			END
		ELSE 
			SET @NewFriendlyNameId = @OldFriendlyNameId

		-- UPDATE PASSWORD
		IF @NewPassword IS NOT NULL
			BEGIN
				SELECT @NewPasswordId = [PasswordId] FROM PasswordTable WHERE [PasswordText] = @NewPassword

				-- VALUE DOES NOT EXIST YET
				IF @NewPasswordId IS NULL
					BEGIN
						INSERT INTO PasswordTable ([PasswordText]) VALUES (@NewPassword)
						SELECT @NewPasswordId = SCOPE_IDENTITY()
					END
			END
		ELSE
			SET @NewPasswordId = @OldPasswordId

		-- UPDATE USER TABLE WITH NEW VALUES
		UPDATE UserTable
		SET [FriendlyNameId ] = @NewFriendlyNameId, [PasswordId] = @NewPasswordId
		WHERE [UserName] = @UserName

		-- IF THE FRIENDLY NAME IS NOT USED ANYWHERE ELSE DELETE IT
		IF (SELECT COUNT(*) FROM UserTable WHERE [FriendlyNameId] = @OldFriendlyNameId) = 0
				DELETE FROM FriendlyName WHERE [FriendlyNameId] = @OldFriendlyNameId

		-- IF THE PASSWORD IS NOT USED ANYWHERE ELSE DELETE IT
		IF (SELECT COUNT(*) FROM UserTable WHERE [PasswordId] = @OldPasswordId) = 0
			DELETE FROM PasswordTable WHERE [PasswordId] = @OldPasswordId

	END TRY
	BEGIN CATCH
              DECLARE	@ErrorMsg nvarchar(255),
						@ErrorNumber int,
						@ErrorSeverity int,
						@ErrorState int,
						@ErrorProcedure nvarchar(4000),
						@ErrorLine int,
						@ErrorMessage nvarchar(4000);
              --Get Error details
              SELECT
                     @ErrorNumber = ERROR_NUMBER(),
                     @ErrorSeverity = ERROR_SEVERITY(),
                     @ErrorState = ERROR_STATE(),
                     @ErrorProcedure = ERROR_PROCEDURE(),
                     @ErrorLine = ERROR_LINE(),
                     @ErrorMessage = ERROR_MESSAGE();
                     
              --Create new Error Message.
              SET @ErrorMsg = N'%s raised an error on line %d.' + CHAR(13) + CHAR(10) +
                                         '%s' + CHAR(13) + CHAR(10) + 
                                          'Original Error Num: %d'
              --Throw error to caller.
              RAISERROR(@ErrorMsg,
                             @ErrorSeverity,
                             @ErrorState,
                             @ErrorProcedure,
                             @ErrorLine,
                             @ErrorMessage,
                             @ErrorNumber)
              --Rollback Transaction is one is started.
              IF @@TRANCOUNT > 0
                     BEGIN
                           PRINT N'Rolling back transaction'
                           ROLLBACK TRANSACTION;
                     END    
       END CATCH

       IF @@TRANCOUNT > 0
       BEGIN
              PRINT N'Committing transaction'
              COMMIT TRANSACTION;
       END
END
GRANT EXECUTE ON [dbo].[usp_UpdateUser] TO PUBLIC AS [dbo]]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[int]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[nvarchar]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateUser].[@UserName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateUser].[@NewFriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[FriendlyName].[FriendlyName]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateUser].[@NewPassword]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[PasswordTable].[PasswordText]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[FriendlyNameId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UserTable].[PasswordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[usp_UpdateUser]" />
				</Entry>
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" Type="SqlUser" />
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_UpdateUser].[@UserName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_UpdateUser].[@NewFriendlyName]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="128" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[usp_UpdateUser].[@NewPassword]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Property Name="Length" Value="64" />
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[varchar]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="4318" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE [dbo].[usp_UpdateUser]&#xD;&#xA;&#x9;@UserName VARCHAR(128),&#xD;&#xA;&#x9;@NewFriendlyName VARCHAR(128),&#xD;&#xA;&#x9;@NewPassword VARCHAR(64)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
	</Model>
</DataSchemaModel>